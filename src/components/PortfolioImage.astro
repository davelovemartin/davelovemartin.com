---
import { Picture } from "astro:assets";

interface Props {
  alt: string;
  src: ImageMetadata;
  hasBorder?: Boolean;
}

const { alt, src, hasBorder } = Astro.props;

const widths: number[] = createWidthsAndSizes(320, src.width)[0];
const sizes: string = createWidthsAndSizes(320, src.width)[1];

function createWidthsAndSizes(
  initialValue: number,
  endValue: number
): [number[], string] {
  const INCREMENT = 120;
  const widths: number[] = [];
  let sizes: string = "";
  if (initialValue > endValue) return [widths, sizes];
  let currentValue = initialValue;
  while (currentValue < endValue) {
    widths.push(currentValue);
    sizes =
      sizes +
      `(max-width: ${
        currentValue + INCREMENT < endValue
          ? currentValue + INCREMENT
          : endValue
      }px) ${currentValue}px `;
    currentValue += INCREMENT;
  }
  widths.push(endValue);
  sizes = sizes + `${endValue}px `;
  return [widths, sizes];
}
---

<style>
  .portfolio {
    height: fit-content;
  }

  .image-with-border {
    border: 1px solid #1e374d;
    box-shadow: var(--shadow1);
  }
</style>

<Picture
  alt={alt}
  src={src}
  class={`portfolio ${hasBorder && "image-with-border"}`}
  widths={widths}
  sizes={sizes}
/>
